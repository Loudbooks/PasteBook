name: Build and Publish Docker Images

on:
  workflow_dispatch:
  push:
    paths:
      - frontend/**
      - backend/**
      - nginx/**
      - migration/**
    branches:
      - master
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        component: [frontend, backend, nginx, migration]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Commit Hash
        id: get_commit_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set Docker Tags
        id: set_tags
        run: |
          if [ "${{ github.ref_name }}" == "master" ]; then
            echo "tag=latest" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            echo "tag=dev" >> $GITHUB_ENV
          else
            echo "Unknown branch: ${{ github.ref_name }}"
            exit 1
          fi

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-${{ matrix.component }}
          key: ${{ runner.os }}-${{ matrix.component }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.component }}-buildx-

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v3
        with:
          context: ./${{ matrix.component }}
          file: ./${{ matrix.component }}/Dockerfile
          build-args: |
            COMMIT_HASH=${{ env.hash }}
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.component }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.component }}-new,mode=max
          tags: |
            ghcr.io/loudbooks/pastebook-${{ matrix.component }}:${{ env.tag }}
            ghcr.io/loudbooks/pastebook-${{ matrix.component }}:${{ env.hash }}

      - name: Move updated Docker cache
        run: |
          rm -rf /tmp/.buildx-cache-${{ matrix.component }}
          mv /tmp/.buildx-cache-${{ matrix.component }}-new /tmp/.buildx-cache-${{ matrix.component }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./${{ matrix.component }}
          file: ./${{ matrix.component }}/Dockerfile
          build-args: |
            COMMIT_HASH=${{ env.hash }}
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.component }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.component }}-new
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/pastebook-${{ matrix.component }}:${{ env.tag }}
            ${{ secrets.DOCKER_USERNAME }}/pastebook-${{ matrix.component }}:${{ env.hash }}
